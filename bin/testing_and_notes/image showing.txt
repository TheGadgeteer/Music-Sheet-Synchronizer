get a BufferedImage:

	import javax.imageio.*;
	
	try {
		BufferedImage img = ImageIO.read(new File("path.jpg"));
	catch (IOException e){}
	
draw image:
	boolean Graphics.drawImage(Image img, int x, int y, ImageObserver observer)
		//observer is for loading infos, just set it to null
	boolean Graphics.drawImage(Image img, 
		int dstx1, dsty1, dstx2, dsty2,
		int srcx1, srcy1, srcx2, srcy2, ImageObserver observer)
		//dst : Destionation corners x1, y1, x2, y2
		//src : Source(image) corners x1, y1, x2, y2

write image:
	static boolean ImageIO.write(RenderedImage im, String formatName, File output) throws IOException
	//BufferedImage implements RenderedImage
	e.g. try { BufferedImage bi = getImage(); ImageIO.write(bi, "png", new File("saved.png"));}
	
filter image:
	//Filtering: producing new image by applying an algorithm to the pixels of the image
	
	void Graphics2D.drawImage(BufferedImage img, BufferedImageOP op, int x, int y)
	//BufferedImageOP implements the filter. Examples:
	// float[] scales = {1f, 1f, 1f, 0.5f}; float[] offsets = new float[4];
	// RescaleOp rop = new RescaleOp(scales, offsets, null);
	// g2d.drawImage(bi, rop, 0, 0);
	//other filters:
	//	RescaleOp: multiplies the color by some factor to lighten/darken the image.
	// 		in this example alpha-Channel * 0.5 to make the image 50% opaque.
	// ConvoleOP:
	//	Each output pixel is computed from surrounding pixels for blur or sharpen effects
	// AffineTransformOp:
	//	application supplied lookup table to remap pixel colors
	// RescaleOp:

	
class BufferedImage
	int getWidth(), getHeight()
	int	getRGB(int x, int y)
	int getRGB(int startX, int startY, int w, int h, int[] rgbArray, int offset, int scansize)
		//rgbArray : if not null, rgb pixels are written here, offset: offset into rgbArray,
		//scansize: scaline stride for the rgbArray
	setRGB(int x, int y, int rgb)
	setRGB(int startX, int startY, int w, int h, int[] rgbArray, int offset, int scansize)
	BufferedImage getSubimage(int x, int y, int w, int h)
	Graphics getGraphics(): draw on this image
	//Tile functions : image is subdivided into tiles
	int getTileHeight(), getTileWidth()
	Raster getTile(int tileX, int tileY)
	int getNumXTiles(), getNumYTiles()
	